use knowledgebase as knowledge.
use tygron as actionspec. 
order = linearall.
module tygronRequests {
	% if a request is incoming with no other options than default answer, just give the default answer	
	forall percept(requests(List)), 
		bel(member(request(_,_,RequestID,_,_,_,_,_,_,[answer(AnswerID, _)]), List),
		not(request(_,_,RequestID,_,_,_,_,_,_,_)))		
		do popup_answer(RequestID,AnswerID). 
	
	% if a request is incoming from another stakeholder to buy land, decline.	
	forall percept(requests(List)), 
		bel(member(request("INTERACTION","BUY_LAND",RequestID,ContentLinkID,VisibleStakeholdersIDList,ActionLogIDList,Price,MultiPolygon,AreaSize,AnswersList), List),
		member(request("INFORMATION","BUY_LAND",RequestID2,ContentLinkID,SenderStakeholdersIDList,_,_,_,_,_),List),
		not(request(_,_,RequestID,_,_,_,_,_,_,_)),
		not(request(_,_,RequestID2,_,_,_,_,_,_,_)),
		ourID(ID),
		not(member(ID, SenderStakeholdersIDList)),
		member(answer(AnsID, "Nee"), AnswersList))
		do popup_answer(RequestID, AnsID). 
		
	% if a request to buy land from a stakeholder is declined increase the requestedLand counter
	if percept(requests(List)), bel(member(request("INTERACTION","BUY_LAND",RequestID,_,[2|T],_,"NO_PRICE",MultiPolygon,_,_), List)) then print(1).	
	if percept(requests(List)), bel(member(request("INTERACTION","BUY_LAND",RequestID,_,[2|T],_,"NO_PRICE",MultiPolygon,_,_), List), not(request(_,_,RequestID,_,_,_,_,_,_,_))) then print(2) + print(MultiPolygon).
	forall bel(requestedLand(MultiPolygon,Counter)) do print(MultiPolygon) + print("search123").
	
	if percept(requests(List)), bel(member(request("INTERACTION","BUY_LAND",RequestID,_,[2|T],_,"NO_PRICE",MultiPolygon,_,_), List), not(request(_,_,RequestID,_,_,_,_,_,_,_)), requestedLand(MultiPolygon, Counter)) then print(3).
	
	forall percept(requests(List)), 
		bel(member(request("INTERACTION","BUY_LAND",RequestID,_,[2|T],_,"NO_PRICE",MultiPolygon,_,_), List),
		not(request(_,_,RequestID,_,_,_,_,_,_,_)),
		requestedLand(MultiPolygon, Counter),
		NewCounter is Counter + 1)
		do delete(requestedLand(MultiPolygon, Counter), doneBuying(MultiPolygon)) + insert(requestedLand(MultiPolygon, NewCounter)). 
	
	% insert request/10 to beliefs
	forall percept(requests(List)), 
		bel(member(request(Type,RequestType,RequestID,ContentLinkID,VisibleStakeholdersIDList,ActionLogIDList,Price,MultiPolygon,AreaSize,AnswersList), List),
		RequestType \= 'PERMIT',
		not(request(_,_,RequestID,_,_,_,_,_,_,_)))
		do insert(request(Type,RequestType,RequestID,ContentLinkID,VisibleStakeholdersIDList,ActionLogIDList,Price,MultiPolygon,AreaSize,AnswersList)). 
}